@startuml
!theme plain
skinparam componentStyle uml2
skinparam shadowing false
skinparam roundcorner 15
skinparam monochrome true
skinparam backgroundColor #F9F9F9
skinparam ArrowColor Black
skinparam ArrowFontColor Black
skinparam defaultFontName "Nanum Gothic"

title Saiondo Backend - 문서 업로드 & 벡터화 흐름 포함

skinparam defaultFontSize 16
skinparam package {
  BackgroundColor #FFFFFF
  BorderColor #8888AA
  FontColor #222244
}
skinparam cloud {
  BackgroundColor #F8F8FF
  BorderColor #8888AA
  FontColor #222244
}
skinparam database {
  BackgroundColor #FFFFF0
  BorderColor #888866
  FontColor #222244
}
skinparam storage {
  BackgroundColor #F8FFF8
  BorderColor #66AA66
  FontColor #222244
}
skinparam node {
  BackgroundColor #F8F8FF
  BorderColor #8888AA
  FontColor #222244
}

' === Frontend ===
package "Frontend (Flutter)" {
  [📱 Flutter App] as flutter #LightSkyBlue
}

' === AWS Cloud ===
cloud "AWS Cloud" as aws {
  node "NestJS Backend\n(EC2/ECS)" as backend #LightYellow {
    [REST API\n(NestJS Controller)] as api #LightYellow
    [Domain Services] as services #LightYellow
    [LLM Proxy] as llmproxy #LightYellow
    [Vector Task Dispatcher] as vectordispatch #LightYellow
    [Web3 Service] as web3svc #LightYellow
    [Logger/Monitoring] as logger #LightYellow

    api -down-> services : Service 호출
    services -down-> vectordispatch : 문서 벡터화 요청
    services -down-> llmproxy : LLM 응답 호출
    api -down-> logger : 로깅
  }

  storage "Amazon S3\n(문서 저장)" as s3 #Azure
  database "Amazon RDS\n(PostgreSQL)" as db #LightGoldenRodYellow

  backend --> db : ORM (Prisma)
  api --> s3 : 문서 업로드 (multipart/form-data)
}

' === LLM Server ===
package "LLM Server (FastAPI + LangChain)" {
  [FastAPI + LangChain] as fastapi #Thistle
  [OpenAI Provider] as openai #White
  [Claude Provider] as claude #White
  [Provider Base] as base #White
  [Logger/Tracing] as tracing #White

  storage "Vector Store\n(Qdrant, Chroma 등)" as vectorstore #HoneyDew

  fastapi -down-> base : provider 패턴
  base -down-> openai
  base -down-> claude
  fastapi -down-> tracing : LangChain Tracing
  fastapi -down-> vectorstore : 임베딩 + 저장
}

cloud "Blockchain\n(Ethereum, Klaytn 등)" as chain #MintCream

' === 실선 데이터 흐름 ===
flutter -down-> api : 문서 업로드 요청
api -down-> s3 : S3에 문서 저장
vectordispatch -down-> fastapi : 문서 메타 + URL 전달
fastapi -down-> vectorstore : 유사 문서 임베딩 및 저장

' === 기존 LLM 질의 흐름 ===
flutter -down-> api : 사용자 질문
llmproxy -down-> fastapi : LLM 질의
fastapi -down-> vectorstore : 관련 문서 검색
fastapi -down-> tracing : 호출 추적

' === Web3 ===
web3svc -down-> chain : RPC/HTTP
flutter ..right..> chain : 직접 Web3 연동 (선택)

@enduml
