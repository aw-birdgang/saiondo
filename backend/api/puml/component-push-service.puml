@startuml
!theme plain
skinparam componentStyle uml2
skinparam shadowing false
skinparam roundcorner 15
skinparam monochrome true
skinparam backgroundColor #F9F9F9
skinparam ArrowColor Black
skinparam ArrowFontColor Black
skinparam defaultFontName "Nanum Gothic"

skinparam package {
  BackgroundColor #E3F2FD
  BorderColor #1976D2
  FontColor #0D47A1
  FontSize 14
  FontStyle bold
}

skinparam component {
  BackgroundColor #F3E5F5
  BorderColor #7B1FA2
  FontColor #4A148C
  FontSize 12
  FontStyle bold
}

skinparam database {
  BackgroundColor #E8F5E8
  BorderColor #388E3C
  FontColor #1B5E20
  FontSize 12
  FontStyle bold
}

skinparam arrow {
  Color #424242
  FontColor #424242
  FontSize 11
  FontStyle italic
}

skinparam note {
  BackgroundColor #FFF3E0
  BorderColor #F57C00
  FontColor #E65100
  FontSize 10
}

title <color:#1976D2><size:18><b>Push Notification Service</b></size></color>\n<color:#666666><size:12>Component Diagram (NestJS + Flutter + Firebase)</size></color>

package "📱 Client" {
  [Flutter App] as Flutter
}

package "⚙️ Backend (NestJS)" {
  [NestJS Server] as Server
  [PushController] as Controller
  [FirebaseService] as Service
  [Firebase Admin SDK] as AdminSDK
}

package "☁️ Firebase Cloud" {
  [FCM] as FCM
}

database "🗄️ Database" as DB {
  [PostgreSQL] as PG
}

' Flutter 앱이 FCM 토큰을 요청
Flutter -[#4CAF50,thickness=2]-> FCM : 🔑 Token Request

' Flutter 앱이 서버에 FCM 토큰/메시지 전송 요청
Flutter -[#2196F3,thickness=2]-> Server : POST /push/send

' 서버의 내부 흐름
Server -[#9C27B0,thickness=1]-> Controller
Controller -[#9C27B0,thickness=1]-> Service
Service -[#9C27B0,thickness=1]-> AdminSDK
Controller -[#FF9800,thickness=1]-> PG : 💾 Save FCM Token\n<color:#666666><i>(Optional)</i></color>

' 서버가 FCM에 푸시 전송
AdminSDK -[#F44336,thickness=2]-> FCM : 📢 Send Push

' FCM이 Flutter 앱에 푸시 전달
FCM -[#4CAF50,thickness=2]-> Flutter : 📱 Deliver Notification

note right of Flutter
  <b>Flutter App</b>
  • FCM 토큰 관리
  • 푸시 수신 처리
  • 토큰 갱신
end note

note right of Controller
  <b>PushController</b>
  • 푸시 전송 API
  • 토큰 저장/관리
  • 유효성 검증
end note

note right of Service
  <b>FirebaseService</b>
  • FCM 환경 검증
  • 메시지 포맷팅
  • 에러 처리
end note

note right of FCM
  <b>Firebase Cloud Messaging</b>
  • 푸시 전송 서비스
  • 토큰 관리
  • 전송 상태 추적
end note

@enduml
