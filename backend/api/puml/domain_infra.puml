@startuml
' 스타일
skinparam package {
  BackgroundColor #F8F8FF
  BorderColor #333366
  FontColor #222244
  FontSize 15
  Shadowing true
}
skinparam rectangle {
  BackgroundColor #F0F8FF
  BorderColor #333366
  FontColor #222244
  Shadowing true
}
skinparam ArrowColor #336699
skinparam ArrowFontColor #336699
skinparam ArrowFontSize 13

' 서버/엔드포인트
package "NestJS Server" {
  [ChannelService] <<service>>
}

' 도메인 계층
package "Domain" {
  [Channel (domain model)] <<entity>>
}

' 인프라 계층
package "Infrastructure" {
  package "Persistence" {
    [ChannelRepository (abstract)] <<interface>>
    package "Relational" {
      [RelationalChannelRepository] <<repository>>
      [ChannelEntity] <<entity>>
      [ChannelMapper] <<mapper>>
      [PrismaService] <<service>>
    }
    package "Document" {
      [DocumentChannelRepository] <<repository>>
      [DocumentChannelEntity] <<entity>>
      [DocumentChannelMapper] <<mapper>>
      [DocumentDbService] <<service>>
    }
  }
}

' ORM/DB
package "Prisma ORM" {
  [@prisma/client.Channel] <<entity>>
  [PrismaClient] <<service>>
  [DB (Postgres)] <<database>>
}

' Document DB
package "DocumentDB" {
  [DocumentDbClient] <<service>>
  [DB (Document)] <<database>>
}

' 관계
[ChannelService] --> [ChannelRepository (abstract)] : "의존성 주입"
[ChannelService] --> [Channel (domain model)] : "비즈니스 로직"

[ChannelRepository (abstract)] <|-- [RelationalChannelRepository]
[ChannelRepository (abstract)] <|-- [DocumentChannelRepository]

' Relational
[RelationalChannelRepository] --> [ChannelEntity]
[RelationalChannelRepository] --> [ChannelMapper]
[RelationalChannelRepository] --> [PrismaService]
[RelationalChannelRepository] --> [@prisma/client.Channel]
[ChannelMapper] <..> [ChannelEntity] : "Entity 변환"
[ChannelMapper] <..> [@prisma/client.Channel] : "Prisma ↔ Entity"
[ChannelEntity] <..> [Channel (domain model)] : "Entity ↔ Domain"
[PrismaService] --> [PrismaClient]
[PrismaClient] --> [DB (Postgres)]

' Document
[DocumentChannelRepository] --> [DocumentChannelEntity]
[DocumentChannelRepository] --> [DocumentChannelMapper]
[DocumentChannelRepository] --> [DocumentDbService]
[DocumentChannelRepository] --> [DocumentDbClient]
[DocumentChannelMapper] <..> [DocumentChannelEntity] : "Entity 변환"
[DocumentChannelEntity] <..> [Channel (domain model)] : "Entity ↔ Domain"
[DocumentDbService] --> [DocumentDbClient]
[DocumentDbClient] --> [DB (Document)]

' 설명 주석
note top of [ChannelService]
  <b>Application Service</b>
  - 도메인/인프라 계층 의존
  - 비즈니스 로직 처리
end note

note right of [ChannelRepository (abstract)]
  <b>Persistence Interface</b>
  - 저장소 추상화
  - 구현체 DI
end note

note right of [RelationalChannelRepository]
  <b>RDB 구현체</b>
  - Prisma 기반
end note

note right of [DocumentChannelRepository]
  <b>DocumentDB 구현체</b>
  - NoSQL 기반
end note

note bottom of [Channel (domain model)]
  <b>Domain Model</b>
  - 핵심 비즈니스 엔티티
end note

@enduml
