@startuml
!theme plain
skinparam linetype ortho
skinparam rectangleRoundCorner 10
skinparam packageRoundCorner 10
skinparam packageBorderStyle solid
skinparam databaseRoundCorner 20
skinparam cloudBorderStyle dashed
skinparam defaultFontSize 14
skinparam ArrowFontColor #333366
skinparam ArrowFontSize 13
skinparam componentStyle uml2
skinparam shadowing false
skinparam roundcorner 15
skinparam monochrome true
skinparam backgroundColor #F9F9F9
skinparam ArrowColor Black
skinparam ArrowFontColor Black
skinparam defaultFontName "Nanum Gothic"

actor "User" as user
rectangle "GitHub\n<size:10>[Source/Trigger]" as github

cloud "AWS Cloud (Dev)" {
  package "CI/CD Pipeline" {
    rectangle "CodePipeline (dev)\n<size:10>[CI/CD Orchestration]" as pipeline
    rectangle "CodeBuild (dev)\n<size:10>[Builds Docker image]" as codebuild
    rectangle "ECR (dev)\n<size:10>[Docker Image Registry]" as ecr
    rectangle "S3 (dev)\n<size:10>[Build Artifacts]" as s3
    rectangle "CodeDeploy (dev)\n<size:10>[Blue/Green Deployment]" as codedeploy
    rectangle "IAM Roles (dev)\n<size:10>[Permissions]" as iam
    rectangle "Codestar Connection (dev)\n<size:10>[GitHub Integration]" as codestar
  }

  package "VPC (dev)" {
    package "Public Subnet" {
      rectangle "Internet Gateway (IGW)\n<size:10>[Public internet access]" as igw
      rectangle "ECS Service (dev)\n<size:10>[Manages container tasks, Public IP]" as ecs_service
    }

    package "Private Subnet" {
      rectangle "EC2 (dev)\n<size:10>[Container hosts]" as ec2
      database "RDS (dev)\n<size:10>[Relational DB]" as rds
    }

    rectangle "SG: ECS (dev)\n<size:9>[Allow HTTP/S 0.0.0.0/0]" as sg_ecs
    rectangle "SG: RDS (dev)\n<size:9>[Only from ECS SG]" as sg_rds
  }
}

' 사용자 → 서비스 흐름
user -down-> ecs_service : "<b><color:blue>1. HTTPS (Public IP)</color></b>"
igw -right-> ecs_service : "<b><color:blue>2. IGW</color></b>"
ecs_service -down-> ec2 : "<b><color:blue>3. On EC2</color></b>"
ec2 -down-> rds : "<b><color:blue>4. DB</color></b>"

' CI/CD 파이프라인 흐름
github --> codestar : "<b><color:darkgreen>1. PR/Push</color></b>"
codestar -down-> pipeline : "<b><color:darkgreen>2. Webhook</color></b>"
pipeline -down--> codebuild : "<b><color:darkgreen>3. Build</color></b>"
codebuild --> s3 : "<b><color:darkgreen>4. Artifact</color></b>"
codebuild -down-> ecr : "<b><color:darkgreen>5. Docker</color></b>"
pipeline -right-> codedeploy : "<b><color:darkgreen>6. Deploy</color></b>"
codedeploy -down-> ecs_service : "<b><color:darkgreen>7. ECS Deploy</color></b>"

' 보안 그룹/권한 흐름
ecs_service --> sg_ecs : "<b><color:purple>1. SG</color></b>"
rds -right-> sg_rds : "<b><color:purple>2. SG</color></b>"
codebuild -up-> iam : "<b><color:orange>3. IAM</color></b>"
ecs_service -up-> iam : "<b><color:orange>4. TaskRole</color></b>"

' 설명 주석
note right of pipeline
  <b>CodePipeline</b>
  - 전체 CI/CD 오케스트레이션
end note

note right of codebuild
  <b>CodeBuild</b>
  - 소스 빌드, 도커 이미지 생성
end note

note right of codedeploy
  <b>CodeDeploy</b>
  - ECS Blue/Green 배포
end note

note right of ecs_service
  <b>ECS Service</b>
  - 컨테이너 오케스트레이션
  - 퍼블릭 IP 할당
end note

note right of rds
  <b>RDS</b>
  - PostgreSQL 등 관계형 DB
end note

@enduml
